version: "3.7"
services:
  web:
    build:
      context: ./job_scheduler/api
      dockerfile: Dockerfile
    restart: always
    ports:
     - "5001:5001"
    depends_on:
      - redis
    volumes: ['./job_scheduler/api:/api']

  watchdog:
    build:
      context: ./data_track/
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - redis
      - mysqldb
      - worker
      - web
      - monitor
    volumes: ['./data_track/:/data_track', "./data/:/data"]

  worker:
    build:
      context: ./job_scheduler/celery-queue
      dockerfile: Dockerfile
    command: celery -A tasks worker -l info -E
    environment:
      CELERY_BROKER_URL: redis://redis
      CELERY_RESULT_BACKEND: redis://redis
    depends_on:
      - redis
    volumes: ['./job_scheduler/celery-queue:/queue']

  monitor:
    build:
      context: ./job_scheduler/celery-queue
      dockerfile: Dockerfile
    ports:
     - "5555:5555"
    command:  ['celery', 'flower', '-A', 'tasks']
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    depends_on:
      - redis
      - worker
      - mysqldb
    volumes: ['./job_scheduler/celery-queue:/queue']
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
  mysqldb:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'db'
      MYSQL_USER: 'hanhaohh'
      MYSQL_PASSWORD: '123'
      MYSQL_ROOT_PASSWORD: '123'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - my-db:/var/lib/mysql 
      - ./sql/init.sql:/data/application/init.sql
    command: --init-file /data/application/init.sql

volumes:
  my-db: